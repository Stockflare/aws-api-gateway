swagger: '2.0'
info:
  version: 1.0.0
  title: 'Stockflare AWS API Gateway'
produces:
  - application.json
paths:
  /users/login:
    post:
      description: |
        Login with user-id and password
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              identity:
                type: string
              token:
                type: string
              expires:
                type: integer
        '403':
          description: Invalid Login
      x-amazon-apigateway-auth:
        type: none
      x-amazon-apigateway-integration:
        type: http
        httpMethod: post
        uri: {{getenv "HTTP_PROTOCOL"}}://users.api.{{getenv "HOSTED_ZONE"}}/login
        requestTemplates:
          application/json:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json:
          4\\d{2}:
            statusCode: "403"
  /users/register:
    post:
      description: |
        Register with user-id and password
      parameters:
        - name: body
          in: body
          required: true
          schema:
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        '200':
          description: Successful response
          schema:
            properties:
              identity:
                type: string
              token:
                type: string
              expires:
                type: integer
        '409':
          description: User logged in
        '400':
          description: Could not create user
      x-amazon-apigateway-auth:
        type: none
      x-amazon-apigateway-integration:
        type: http
        httpMethod: post
        uri: {{getenv "HTTP_PROTOCOL"}}://users.api.{{getenv "HOSTED_ZONE"}}/register
        requestTemplates:
          application/json:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json:
          4\\d{2}:
            statusCode: "409"
          4\\d{2}:
            statusCode: "400"
  /users/lost:
    get:
      description: |
        Request lost password token
      parameters:
        - name: username
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Successful response
      x-amazon-apigateway-auth:
        type: none
      x-amazon-apigateway-integration:
        type: http
        httpMethod: get
        uri: {{getenv "HTTP_PROTOCOL"}}://users.api.{{getenv "HOSTED_ZONE"}}/lost
        requestParameters:
          integration.request.querystring.username: "method.request.querystring.username"
        requestTemplates:
          application/json:
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json:
